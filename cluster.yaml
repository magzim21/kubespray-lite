
- name: prepare nodes
  hosts: kube
  tasks:
    - name: prepare nodes
      include_role:
        name: prepare-ubuntu



- name: init cluster
  hosts: masters[0]
  tasks:
    # - shell: kubeadm init --pod-network-cidr=192.168.0.0/16  
    - shell: kubeadm init --pod-network-cidr=192.168.0.0/16  --control-plane-endpoint={{ hostvars[groups['masters'][0]].ansible_host }}
      # register: join_command

    - name: generate join command 
      shell: |
        kubeadm token create --print-join-command 2>/dev/null | awk 'END{print $0}'
        mkdir /root/.kube
        cp /etc/kubernetes/admin.conf /root/.kube/config
      register: _join_command

    - name: fetch kube config
      fetch:
        flat: true
        src: /etc/kubernetes/admin.conf
        dest: ./admin-{{ tf-workspace }}.conf



- name: join nodes
  hosts: workers
  tasks:
    - name: Join control plane to k8s cluster with a token
      shell: "{{ hostvars[groups['masters'][0]]._join_command.stdout_lines[0] }}"

- name: install calico
  hosts: kube
  tasks:
    - include_role:
        name: cni-calico


- name: Isntall k8s cluster applications
  hosts: masters[0]
  tasks:
    - name: copy ArgoCD master yaml, this installs the rest of applications
      copy:
        src: root-application.yaml
        dest: /tmp/root-application.yaml

    - name: install argo cd 
      shell: |
        kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        
        sleep 10
        kubectl apply -f /tmp/root-application.yaml

    - name: 'get argo cd password'
      shell: 'kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d'
      register: argo_password

    - name: show argo cd password
      debug:
        msg: 'argo cd password {{ argo_password.stdout  }}'





